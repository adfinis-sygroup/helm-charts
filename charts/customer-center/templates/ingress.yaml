{{- if .Values.ingress.enabled -}}
{{- $serviceName := include "customerCenter.fullname" . }}
{{- $backendExternalPort := .Values.backend.service.externalPort }}
{{- $frontendExternalPort := .Values.frontend.service.externalPort }}
{{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
apiVersion: networking.k8s.io/v1
{{ else }}
apiVersion: networking.k8s.io/v1beta1
{{- end}}
kind: Ingress
metadata:
  name: {{ include "customerCenter.fullname" . }}
  labels:
    {{- include "customerCenter.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  rules:
    {{- range $host := .Values.ingress.hosts }}
    - host: {{ $host }}
      http:
        paths:
          - path: /api/
            backend:
              serviceName: {{ $serviceName }}-backend
              servicePort: {{ $backendExternalPort }}
          - path: /
            backend:
              serviceName: {{ $serviceName }}-frontend
              servicePort: {{ $frontendExternalPort }}
    {{- end -}}
  {{- if .Values.ingress.tls }}
  tls:
{{ toYaml .Values.ingress.tls | indent 4 }}
  {{- end -}}
{{- end -}}
